on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: sudo apt-get update -qq && sudo apt-get install -y python3-setuptools python3-wheel ccache cmake redis-server mosquitto-clients
    - name: Configure Cache
      uses: actions/cache@v2
      env:
        cache-name: cache
      with:
        path: |
          ~/.ccache
          ~/.local/bin/gimme
          ~/.gimme
          ~/.cache/go-build
          ~/go
          ~/.cache/pip
          ~/arm-any32-linux-musleabi.tar.gz
          ~/mips-any32-linux-musl.tar.gz
        key: cache
    - name: Create ~/.local/bin
      run: mkdir -p ~/.local/bin
    - name: Install gimme
      run: test -f ~/.local/bin/gimme || curl -L -o ~/.local/bin/gimme https://raw.githubusercontent.com/travis-ci/gimme/master/gimme && chmod 755 ~/.local/bin/gimme
    - name: Clone repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0 # xz-embedded cannot be cloned with depth 1
    - name: Install Go
      run: ~/.local/bin/gimme stable
    - name: Install Python packages
      run: python3 -m pip install meson ninja
    - name: Download ARM toolchain
      run: test -f ~/arm-any32-linux-musleabi.tar.gz || curl -Lo ~/arm-any32-linux-musleabi.tar.gz https://github.com/dimkr/toolchains/releases/latest/download/arm-any32-linux-musleabi.tar.gz
    - name: Download MIPS toolchain
      run: test -f ~/mips-any32-linux-musl.tar.gz || curl -Lo ~/mips-any32-linux-musl.tar.gz https://github.com/dimkr/toolchains/releases/latest/download/mips-any32-linux-musl.tar.gz
    - name: Install ARM toolchain
      run: sudo tar -xz -f ~/arm-any32-linux-musleabi.tar.gz -C /
    - name: Install MIPS toolchain
      run: sudo tar -xz -f ~/mips-any32-linux-musl.tar.gz -C /
    - name: Test backend
      run: go test -timeout 10s ./...
    - name: Test client
      run: |
        export PATH=$PATH:~/.local/bin
        cd client
        meson -Db_sanitize=address build
        meson test --print-errorlogs -C build
    - name: Test backend
      run: |
        export PATH=$PATH:~/.local/bin
        cd client
        meson -Db_sanitize=address --optimization=3 -Dssl=false build-no-ssl
        ninja -C build-no-ssl
        cd ..
        sudo service redis-server start
        sleep 1
        CGO_ENABLED=0 go build -ldflags "-s -w" ./cmd/broker
        export REDIS_URL=redis://localhost
        PORT=1883 ./broker &
        sleep 1
        ./client/build-no-ssl/yodi -h localhost -i 0b8e29de-13a1-43cf-a793-4d898440550e -u user1 -p password1 &
        CGO_ENABLED=0 go build -ldflags "-s -w" ./cmd/mailman
        ./mailman &
        sleep 1
        (mosquitto_pub -u user3 -P password3 -t /0b8e29de-13a1-43cf-a793-4d898440550e/commands -f ci/command.json -q 1) &
        mosquitto_sub -u user2 -P password2 -t /0b8e29de-13a1-43cf-a793-4d898440550e/results -W 10 -C 1 > result
        cmp result ci/result.json
    - name: Cross-compile client
      run: |
        export PATH=$PATH:~/.local/bin
        cd client
        meson --cross-file=arm-any32-linux-musleabi -Dssl_verify=true build-arm
        ninja -C build-arm
        meson --cross-file=mips-any32-linux-musl -Dssl_verify=true build-mips
        ninja -C build-mips